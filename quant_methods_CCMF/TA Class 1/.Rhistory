knit_with_parameters("~/Library/CloudStorage/OneDrive-ImperialCollegeLondon/Documents/TA/Prof Shuang Zhang/BUSI97293-2223/TA Classes/TA Class 1/CCMF_QM_TAclass_1.Rmd")
library(rmarkdown)
render("QM_TAclass1.Rmd", pdf_document())
render("CCMF_QM_TAclass_1.Rmd", pdf_document())
tinytex::reinstall_tinytex(repository = "illinois")
render("QM_TAclass1.Rmd", pdf_document())
render("CCMF_QM_TAclass_1.Rmd", pdf_document())
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
render("CCMF_QM_TAclass_1.Rmd", pdf_document())
st_ratio <- c(15, 17, 19, 20, 22, 23.5, 25)
test_score <- c(680, 640, 670, 660, 630, 660, 635)
rm(list = ls())
rm(list = ls())
st_ratio <- c(15, 17, 19, 20, 22, 23.5, 25)
test_score <- c(680, 640, 670, 660, 630, 660, 635)
st_ratio
test_score
st_ratio
test_score
st_ratio
rm(list = ls())
# Clear the environment
rm(list = ls())
# Create sample data
st_ratio <- c(15, 17, 19, 20, 22, 23.5, 25)
test_score <- c(680, 640, 670, 660, 630, 660, 635)
# Print out sample data
st_ratio
test_score
# create a scatterplot of the data
plot(test_score ~ st_ratio)
## # install the AER package (once)
## install.packages("AER")
##
## # load the AER package
if(!require(AER)) install.packages("AER",repos = "http://cran.us.r-project.org")
# load the the dataset
library(AER)
data(CASchools)
class(CASchools)
head(CASchools)
CASchools$st_ratio <- CASchools$students / CASchools$teachers
CASchools$test_score <- (CASchools$read + CASchools$math)/2
head(CASchools)
# sample averages
avg_st_ratio <- mean(CASchools$st_ratio)
avg_test_score <- mean(CASchools$test_score)
# sample standard deviations
sd_st_ratio <- sd(CASchools$st_ratio)
sd_test_score <- sd(CASchools$test_score)
# create vector of quantiles and compute
quantiles <- c(0.1,0.25,0.4,0.5,0.6,0.75,0.9)
quant_st_ratio <- quantile(CASchools$st_ratio, quantiles)
quant_test_score <- quantile(CASchools$test_score, quantiles)
# assemble int dataframe
summary <- data.frame(average = c(avg_st_ratio, avg_test_score),
sd = c(sd_st_ratio, sd_test_score),
quantile = rbind(quant_st_ratio, quant_test_score))
# print summary to console
summary
help(coeftest)
# Clear the environment
rm(list = ls())
# Create sample data
st_ratio <- c(15, 17, 19, 20, 22, 23.5, 25)
test_score <- c(680, 640, 670, 660, 630, 660, 635)
rm(list = ls())
# Clear the environment
rm(list = ls())
# Create sample data
st_ratio <- c(15, 17, 19, 20, 22, 23.5, 25)
test_score <- c(680, 640, 670, 660, 630, 660, 635)
# Print out sample data
st_ratio
test_score
# create a scatterplot of the data
plot(test_score ~ st_ratio)
plot(test_score ~ st_ratio)
# add the systematic relationship to the plot
abline(a=713,b=-3)
## # install the AER package (once)
## install.packages("AER")
##
## # load the AER package
if(!require(AER)) install.packages("AER",repos = "http://cran.us.r-project.org")
# load the the dataset
library(AER)
data(CASchools)
View(CASchools)
CASchools$st_ratio <- CASchools$students / CASchools$teachers
View(CASchools)
CASchools$test_score <- (CASchools$read + CASchools$math)/2
View(CASchools)
# sample averages
avg_st_ratio <- mean(CASchools$st_ratio)
avg_test_score <- mean(CASchools$test_score)
# sample standard deviations
sd_st_ratio <- sd(CASchools$st_ratio)
sd_test_score <- sd(CASchools$test_score)
# create vector of quantiles and compute
quantiles <- c(0.1,0.25,0.4,0.5,0.6,0.75,0.9)
quant_st_ratio <- quantile(CASchools$st_ratio, quantiles)
quant_test_score <- quantile(CASchools$test_score, quantiles)
# assemble int dataframe
summary <- data.frame(average = c(avg_st_ratio, avg_test_score),
sd = c(sd_st_ratio, sd_test_score),
quantile = rbind(quant_st_ratio, quant_test_score))
# print summary to console
summary
help(quantile)
help("coeftest")
# Clear the environment
rm(list = ls())
# Create sample data
st_ratio <- c(15, 17, 19, 20, 22, 23.5, 25)
test_score <- c(680, 640, 670, 660, 630, 660, 635)
st_ratii
st_ratio
# Clear the environment
rm(list = ls())
# Create sample data
st_ratio <- c(15, 17, 19, 20, 22, 23.5, 25)
test_score <- c(680, 640, 670, 660, 630, 660, 635)
# Print out sample data
st_ratio
test_score
# create a scatterplot of the data
plot(test_score ~ st_ratio)
plot(test_score ~ st_ratio)
# add the systematic relationship to the plot
abline(a=713,b=-3)
## # install the AER package (once)
## install.packages("AER")
##
## # load the AER package
if(!require(AER)) install.packages("AER",repos = "http://cran.us.r-project.org")
# load the the dataset
library(AER)
data(CASchools)
class(CASchools)
head(CASchools)
CASchools$st_ratio <- CASchools$students / CASchools$teachers
CASchools$test_score <- (CASchools$read + CASchools$math)/2
head(CASchools)
# sample averages
avg_st_ratio <- mean(CASchools$st_ratio)
avg_test_score <- mean(CASchools$test_score)
# sample standard deviations
sd_st_ratio <- sd(CASchools$st_ratio)
sd_test_score <- sd(CASchools$test_score)
# create vector of quantiles and compute
quantiles <- c(0.1,0.25,0.4,0.5,0.6,0.75,0.9)
quant_st_ratio <- quantile(CASchools$st_ratio, quantiles)
quant_test_score <- quantile(CASchools$test_score, quantiles)
# assemble int dataframe
summary <- data.frame(average = c(avg_st_ratio, avg_test_score),
sd = c(sd_st_ratio, sd_test_score),
quantile = rbind(quant_st_ratio, quant_test_score))
# print summary to console
summary
plot(test_score ~ st_ratio,
data = CASchools, # data frame containing the data
main = "Scatterplot of test scores and student-teacher ratio", # plot main title
xlab = "student-teacher ratio (x)", # x axis label
ylab = "test score (y)") # y axis label
cor(CASchools$st_ratio, CASchools$test_score)
# estimate and assign result
lin_model <- lm(test_score ~ st_ratio, data = CASchools)
#print result
lin_model
plot(test_score ~ st_ratio,
data = CASchools,
main = "Scatterplot of test scores and student-teacher ratio",
xlab = "student-teacher ratio (x)",
ylab = "test score (y)",
xlim = c(10,30), # extend x axis range
ylim = c(600,720)) # extend y axis range
# add regression line
abline(lin_model) # draws line based on estimators from linear model
mod_summary <- summary(lin_model)
# print summary
mod_summary
# Plot the standard normal on the support [-6,6]
t <- seq(-6, 6, 0.01)
plot(x = t,
y = dnorm(t, 0, 1),
type = "l",
col = "steelblue",
lwd = 2,
yaxs = "i",
axes = F,
ylab = "",
main = expression("Calculating the p-value of a Two-sided Test when" ~ t^act ~ "=-4.75"),
cex.lab = 0.7,
cex.main = 1)
tact <- -4.75
axis(1, at = c(0, -1.96, 1.96, -tact, tact), cex.axis = 0.7)
# Shade the critical regions using polygon():
# critical region in left tail
polygon(x = c(-6, seq(-6, -1.96, 0.01), -1.96),
y = c(0, dnorm(seq(-6, -1.96, 0.01)), 0),
col = 'orange')
# critical region in right tail
polygon(x = c(1.96, seq(1.96, 6, 0.01), 6),
y = c(0, dnorm(seq(1.96, 6, 0.01)), 0),
col = 'orange')
# Add arrows and texts indicating critical regions and the p-value
arrows(-3.5, 0.2, -2.5, 0.02, length = 0.1)
arrows(3.5, 0.2, 2.5, 0.02, length = 0.1)
arrows(-5, 0.16, -4.75, 0, length = 0.1)
arrows(5, 0.16, 4.75, 0, length = 0.1)
text(-3.5, 0.22,
labels = expression("0.025"~"="~over(alpha, 2)),
cex = 0.7)
text(3.5, 0.22,
labels = expression("0.025"~"="~over(alpha, 2)),
cex = 0.7)
text(-5, 0.18,
labels = expression(paste("-|",t[act],"|")),
cex = 0.7)
text(5, 0.18,
labels = expression(paste("|",t[act],"|")),
cex = 0.7)
# Add ticks indicating critical values at the 0.05-level, t^act and -t^act
rug(c(-1.96, 1.96), ticksize  = 0.145, lwd = 2, col = "darkred")
rug(c(-tact, tact), ticksize  = -0.0451, lwd = 2, col = "darkgreen")
cor(CASchools$st_ratio, CASchools$test_score)
cor(CASchools$st_ratio, CASchools$english)
# estimate models
linear_mod <- lm(test_score ~ st_ratio, data = CASchools)
multi_mod <- lm(test_score ~ st_ratio + english, data = CASchools)
# print results
linear_mod
multi_mod
summary(multi_mod)$coef
require("scatterplot3d")
# Data, linear regression with two explanatory variables
#wh <- iris$Species != "setosa"
x  <- CASchools$st_ratio#[wh]
y  <- CASchools$test_score#[wh]
z  <- CASchools$english#[wh]
df <- data.frame(x, y, z)
LM <- lm(y ~ x + z, df)
# scatterplot
s3d <- scatterplot3d(x, z, y, pch = 19, type = "p", color = "darkgrey",
main = "Regression Plane", grid = TRUE, box = FALSE,
mar = c(2.5, 2.5, 2, 1.5), angle = 30, zlab = "Test Score",
xlab = "Student-Teacher Ratio", ylab = "English")
# regression plane
s3d$plane3d(LM, draw_polygon = TRUE, draw_lines = TRUE,
polygon_args = list(col = rgb(.1, .2, .7, .5)))
# overlay positive residuals
wh <- resid(LM) > 0
s3d$points3d(x[wh], z[wh], y[wh], pch = 19)
summary(multi_mod)
summary(linear_mod)$adj.r.squared
summary(multi_mod)$adj.r.squared
coeftest(multi_mod, vcov. = vcovHC, type = "HC1")
View(CASchools)
help("quantile")
install.packages("rio")
rm(list = ls())
library("tidyverse")
library("modelr")
library("rio")
# load data from online (note: requires rio package to import)
progresa <- import("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/progresa.csv")
View(progresa)
reg1.turnout <- lm (t2000 ~ treatment)
reg1.turnout <- lm (t2000 ~ treatment, data = progresa)
summary(reg1.turnout)
1:10
help(runif)
seq(0,20,2)
# Clear the environment
rm(list = ls())
# Create sample data
st_ratio <- c(15, 17, 19, 20, 22, 23.5, 25)
test_score <- c(680, 640, 670, 660, 630, 660, 635)
## # install the AER package (once)
## install.packages("AER")
##
## # load the AER package
if(!require(AER)) install.packages("AER",repos = "http://cran.us.r-project.org")
# load the the dataset
library(AER)
data(CASchools)
View(CASchools)
1-1
